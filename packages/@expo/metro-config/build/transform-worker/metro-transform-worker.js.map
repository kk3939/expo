{"version":3,"file":"metro-transform-worker.js","names":["_core","data","require","_generator","_interopRequireDefault","babylon","_interopRequireWildcard","types","_JsFileWrapping","_collectDependencies","_generateImportNames","_countLines","_metroCache","_metroCacheKey","_metroSourceMap","_metroTransformPlugins","_metroTransformWorker","_getMinifier","_nodeAssert","assetTransformer","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","nullthrows","x","message","assert","getDynamicDepsBehavior","inPackages","filename","test","Error","minifyCode","config","projectRoot","code","source","map","reserved","sourceMap","fromRawMappings","functionMap","path","isIgnored","toMap","undefined","minify","getMinifier","minifierPath","minified","minifierConfig","toBabelSegments","toSegmentTuple","error","constructor","name","line","col","disabledDependencyTransformer","transformSyncRequire","transformImportCall","transformPrefetch","transformIllegalDynamicRequire","InvalidRequireCallError","innerError","transformJS","file","options","_file$ast","ast","parse","sourceType","importDefault","importAll","generateImportNames","directives","program","findIndex","d","value","push","directive","directiveLiteral","plugins","babelPluginOpts","inlineableCalls","experimentalImportSupport","metroTransformPlugins","importExportPlugin","inlineRequires","inlineRequiresPlugin","ignoredRequires","nonInlinedRequires","length","transformFromAstSync","babelrc","configFile","comments","sourceMaps","cloneInputAst","dev","clearProgramScopePlugin","visitor","Program","enter","scope","crawl","constantFoldingPlugin","dependencyMapName","dependencies","wrappedAst","type","JsFileWrapping","wrapPolyfill","opts","asyncRequireModulePath","dependencyTransformer","unstable_disableModuleWrapping","dynamicRequires","dynamicDepsInPackages","keepRequireNames","allowOptionalDependencies","unstable_dependencyMapReservedName","unstable_allowRequireContext","collectDependencies","InternalInvalidRequireCallError","wrapModule","globalPrefix","unstable_transformProfile","inputFileSize","optimizationSizeLimit","unstable_disableNormalizePseudoGlobals","normalizePseudoGlobals","reservedNames","result","generate","compact","unstable_compactOutput","retainLines","sourceFileName","rawMappings","output","lineCount","countLines","transformAsset","context","assetRegistryPath","assetPlugins","transform","getBabelTransformArgs","jsFile","transformJSWithBabel","_ref","_transformResult$meta","_transformResult$meta2","_transformResult$meta3","babelTransformerPath","transformer","transformResult","functionMapBabelPlugin","metadata","metro","transformJSON","jsonToCommonJS","wrapJson","jsType","_babelTransformerOpti","_","babelTransformerOptions","enableBabelRCLookup","enableBabelRuntime","hermesParser","publicPath","platform","src","sourceCode","toString","position","indexOf","SyntaxError","endsWith","jsonFile","getCacheKey","remainingConfig","filesKey","getMetroCacheKey","resolve","getTransformPluginCacheKeyFiles","babelTransformer","stableHash","join"],"sources":["../../src/transform-worker/metro-transform-worker.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Fork of the Metro transformer worker, but with additional transforms moved to `babel-preset-expo` and modifications made for web support.\n * https://github.com/facebook/metro/blob/412771475c540b6f85d75d9dcd5a39a6e0753582/packages/metro-transform-worker/src/index.js#L1\n */\nimport { transformFromAstSync } from '@babel/core';\nimport type { ParseResult, PluginItem } from '@babel/core';\nimport generate from '@babel/generator';\nimport * as babylon from '@babel/parser';\nimport * as types from '@babel/types';\nimport type { TransformResultDependency } from 'metro/src/DeltaBundler';\nimport JsFileWrapping from 'metro/src/ModuleGraph/worker/JsFileWrapping';\nimport collectDependencies, {\n  InvalidRequireCallError as InternalInvalidRequireCallError,\n  Dependency,\n} from 'metro/src/ModuleGraph/worker/collectDependencies';\nimport type {\n  DependencyTransformer,\n  DynamicRequiresBehavior,\n} from 'metro/src/ModuleGraph/worker/collectDependencies';\nimport generateImportNames from 'metro/src/ModuleGraph/worker/generateImportNames';\nimport countLines from 'metro/src/lib/countLines';\nimport type { BabelTransformer, BabelTransformerArgs } from 'metro-babel-transformer';\nimport { stableHash } from 'metro-cache';\nimport getMetroCacheKey from 'metro-cache-key';\nimport {\n  fromRawMappings,\n  functionMapBabelPlugin,\n  toBabelSegments,\n  toSegmentTuple,\n} from 'metro-source-map';\nimport type { FBSourceFunctionMap, MetroSourceMapSegmentTuple } from 'metro-source-map';\nimport metroTransformPlugins from 'metro-transform-plugins';\nimport { JsOutput, JsTransformerConfig, JsTransformOptions, Type } from 'metro-transform-worker';\nimport getMinifier from 'metro-transform-worker/src/utils/getMinifier';\nimport assert from 'node:assert';\n\nimport * as assetTransformer from './asset-transformer';\n\nexport { JsTransformOptions };\n\ninterface BaseFile {\n  readonly code: string;\n  readonly filename: string;\n  readonly inputFileSize: number;\n}\n\ninterface AssetFile extends BaseFile {\n  readonly type: 'asset';\n}\n\ntype JSFileType = 'js/script' | 'js/module' | 'js/module/asset';\n\ninterface JSFile extends BaseFile {\n  readonly ast?: ParseResult | null;\n  readonly type: JSFileType;\n  readonly functionMap: FBSourceFunctionMap | null;\n}\n\ninterface JSONFile extends BaseFile {\n  readonly type: Type;\n}\n\ninterface TransformationContext {\n  readonly config: JsTransformerConfig;\n  readonly projectRoot: string;\n  readonly options: JsTransformOptions;\n}\n\ninterface TransformResponse {\n  readonly dependencies: readonly TransformResultDependency[];\n  readonly output: readonly JsOutput[];\n}\n\n// asserts non-null\nfunction nullthrows<T extends object>(x: T | null, message?: string): NonNullable<T> {\n  assert(x != null, message);\n  return x;\n}\n\nfunction getDynamicDepsBehavior(\n  inPackages: DynamicRequiresBehavior,\n  filename: string\n): DynamicRequiresBehavior {\n  switch (inPackages) {\n    case 'reject':\n      return 'reject';\n    case 'throwAtRuntime':\n      return /(?:^|[/\\\\])node_modules[/\\\\]/.test(filename) ? inPackages : 'reject';\n    default:\n      throw new Error(`invalid value for dynamic deps behavior: \\`${inPackages}\\``);\n  }\n}\n\nconst minifyCode = async (\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  code: string,\n  source: string,\n  map: MetroSourceMapSegmentTuple[],\n  reserved: string[] = []\n): Promise<{\n  code: string;\n  map: MetroSourceMapSegmentTuple[];\n}> => {\n  const sourceMap = fromRawMappings([\n    {\n      code,\n      source,\n      map,\n      // functionMap is overridden by the serializer\n      functionMap: null,\n      path: filename,\n      // isIgnored is overriden by the serializer\n      isIgnored: false,\n    },\n  ]).toMap(undefined, {});\n\n  const minify = getMinifier(config.minifierPath);\n\n  try {\n    const minified = await minify({\n      code,\n      map: sourceMap,\n      filename,\n      reserved,\n      config: config.minifierConfig,\n    });\n\n    return {\n      code: minified.code,\n      map: minified.map ? toBabelSegments(minified.map).map(toSegmentTuple) : [],\n    };\n  } catch (error: any) {\n    if (error.constructor.name === 'JS_Parse_Error') {\n      throw new Error(`${error.message} in file ${filename} at ${error.line}:${error.col}`);\n    }\n\n    throw error;\n  }\n};\n\nconst disabledDependencyTransformer: DependencyTransformer = {\n  transformSyncRequire: () => {},\n  transformImportCall: () => {},\n  transformPrefetch: () => {},\n  transformIllegalDynamicRequire: () => {},\n};\n\nclass InvalidRequireCallError extends Error {\n  innerError: InternalInvalidRequireCallError;\n  filename: string;\n\n  constructor(innerError: InternalInvalidRequireCallError, filename: string) {\n    super(`${filename}:${innerError.message}`);\n    this.innerError = innerError;\n    this.filename = filename;\n  }\n}\n\nasync function transformJS(\n  file: JSFile,\n  { config, options, projectRoot }: TransformationContext\n): Promise<TransformResponse> {\n  // Transformers can output null ASTs (if they ignore the file). In that case\n  // we need to parse the module source code to get their AST.\n  let ast: babylon.ParseResult<types.File> =\n    file.ast ?? babylon.parse(file.code, { sourceType: 'unambiguous' });\n\n  // NOTE(EvanBacon): This can be really expensive on larger files. We should replace it with a cheaper alternative that just iterates and matches.\n  const { importDefault, importAll } = generateImportNames(ast);\n\n  // Add \"use strict\" if the file was parsed as a module, and the directive did\n  // not exist yet.\n  const { directives } = ast.program;\n\n  if (\n    ast.program.sourceType === 'module' &&\n    directives != null &&\n    directives.findIndex((d) => d.value.value === 'use strict') === -1\n  ) {\n    directives.push(types.directive(types.directiveLiteral('use strict')));\n  }\n\n  // Perform the import-export transform (in case it's still needed), then\n  // fold requires and perform constant folding (if in dev).\n  const plugins: PluginItem[] = [];\n  const babelPluginOpts = {\n    ...options,\n    inlineableCalls: [importDefault, importAll],\n    importDefault,\n    importAll,\n  };\n\n  // NOTE(EvanBacon): This is effectively a replacement for the `@babel/plugin-transform-modules-commonjs`\n  // plugin that's running in `@@react-native/babel-preset`, but with shared names for inlining requires.\n  if (options.experimentalImportSupport === true) {\n    plugins.push([metroTransformPlugins.importExportPlugin, babelPluginOpts]);\n  }\n\n  // NOTE(EvanBacon): This can basically never be safely enabled because it doesn't respect side-effects and\n  // has no ability to respect side-effects because the transformer hasn't collected all dependencies yet.\n  if (options.inlineRequires) {\n    plugins.push([\n      metroTransformPlugins.inlineRequiresPlugin,\n      {\n        ...babelPluginOpts,\n        ignoredRequires: options.nonInlinedRequires,\n      },\n    ]);\n  }\n\n  // NOTE(EvanBacon): We apply this conditionally in `babel-preset-expo` with other AST transforms.\n  // plugins.push([metroTransformPlugins.inlinePlugin, babelPluginOpts]);\n\n  // TODO: This MUST be run even though no plugins are added, otherwise the babel runtime generators are broken.\n  if (plugins.length) {\n    ast = nullthrows<babylon.ParseResult<types.File>>(\n      // @ts-expect-error\n      transformFromAstSync(ast, '', {\n        ast: true,\n        babelrc: false,\n        code: false,\n        configFile: false,\n        comments: true,\n        filename: file.filename,\n        plugins,\n        sourceMaps: false,\n\n        // NOTE(kitten): This was done to wipe the paths/scope caches, which the `constantFoldingPlugin` needs to work,\n        // but has been replaced with `programPath.scope.crawl()`.\n        // Old Note from Metro:\n        // > Not-Cloning the input AST here should be safe because other code paths above this call\n        // > are mutating the AST as well and no code is depending on the original AST.\n        // > However, switching the flag to false caused issues with ES Modules if `experimentalImportSupport` isn't used https://github.com/facebook/metro/issues/641\n        // > either because one of the plugins is doing something funky or Babel messes up some caches.\n        // > Make sure to test the above mentioned case before flipping the flag back to false.\n        cloneInputAst: false,\n      }).ast!\n    );\n  }\n\n  if (!options.dev) {\n    // NOTE(kitten): Any Babel helpers that have been added (`path.hub.addHelper(...)`) will usually not have any\n    // references, and hence the `constantFoldingPlugin` below will remove them.\n    // To fix the references we add an explicit `programPath.scope.crawl()`. Alternatively, we could also wipe the\n    // Babel traversal cache (`traverse.cache.clear()`)\n    const clearProgramScopePlugin: PluginItem = {\n      visitor: {\n        Program: {\n          enter(path) {\n            path.scope.crawl();\n          },\n        },\n      },\n    };\n\n    // Run the constant folding plugin in its own pass, avoiding race conditions\n    // with other plugins that have exit() visitors on Program (e.g. the ESM\n    // transform).\n    ast = nullthrows<babylon.ParseResult<types.File>>(\n      // @ts-expect-error\n      transformFromAstSync(ast, '', {\n        ast: true,\n        babelrc: false,\n        code: false,\n        configFile: false,\n        comments: true,\n        filename: file.filename,\n        plugins: [\n          clearProgramScopePlugin,\n          [metroTransformPlugins.constantFoldingPlugin, babelPluginOpts],\n        ],\n        sourceMaps: false,\n\n        // NOTE(kitten): In Metro, this is also false, but only works because the prior run of `transformFromAstSync` was always\n        // running with `cloneInputAst: true`.\n        // This isn't needed anymore since `clearProgramScopePlugin` re-crawls the AST’s scope instead.\n        cloneInputAst: false,\n      }).ast\n    );\n  }\n\n  let dependencyMapName: string = '';\n  let dependencies: readonly Dependency[];\n  let wrappedAst: types.File | undefined;\n\n  // If the module to transform is a script (meaning that is not part of the\n  // dependency graph and it code will just be prepended to the bundle modules),\n  // we need to wrap it differently than a commonJS module (also, scripts do\n  // not have dependencies).\n  if (file.type === 'js/script') {\n    dependencies = [];\n    wrappedAst = JsFileWrapping.wrapPolyfill(ast);\n  } else {\n    try {\n      const opts = {\n        asyncRequireModulePath: config.asyncRequireModulePath,\n        dependencyTransformer:\n          config.unstable_disableModuleWrapping === true\n            ? disabledDependencyTransformer\n            : undefined,\n        dynamicRequires: getDynamicDepsBehavior(config.dynamicDepsInPackages, file.filename),\n        inlineableCalls: [importDefault, importAll],\n        keepRequireNames: options.dev,\n        allowOptionalDependencies: config.allowOptionalDependencies,\n        dependencyMapName: config.unstable_dependencyMapReservedName,\n        unstable_allowRequireContext: config.unstable_allowRequireContext,\n      };\n\n      ({ ast, dependencies, dependencyMapName } = collectDependencies(ast, opts));\n    } catch (error) {\n      if (error instanceof InternalInvalidRequireCallError) {\n        throw new InvalidRequireCallError(error, file.filename);\n      }\n      throw error;\n    }\n\n    if (config.unstable_disableModuleWrapping === true) {\n      wrappedAst = ast;\n    } else {\n      // TODO: Replace this with a cheaper transform that doesn't require AST.\n      ({ ast: wrappedAst } = JsFileWrapping.wrapModule(\n        ast,\n        importDefault,\n        importAll,\n        dependencyMapName,\n        config.globalPrefix\n      ));\n    }\n  }\n\n  const minify =\n    options.minify &&\n    options.unstable_transformProfile !== 'hermes-canary' &&\n    options.unstable_transformProfile !== 'hermes-stable';\n\n  const reserved: string[] = [];\n  if (config.unstable_dependencyMapReservedName != null) {\n    reserved.push(config.unstable_dependencyMapReservedName);\n  }\n\n  if (\n    minify &&\n    file.inputFileSize <= config.optimizationSizeLimit &&\n    !config.unstable_disableNormalizePseudoGlobals\n  ) {\n    // NOTE(EvanBacon): Simply pushing this function will mutate the AST, so it must run before the `generate` step!!\n    reserved.push(\n      ...metroTransformPlugins.normalizePseudoGlobals(wrappedAst, {\n        reservedNames: reserved,\n      })\n    );\n  }\n\n  const result = generate(\n    wrappedAst,\n    {\n      comments: true,\n      compact: config.unstable_compactOutput,\n      filename: file.filename,\n      retainLines: false,\n      sourceFileName: file.filename,\n      sourceMaps: true,\n    },\n    file.code\n  );\n\n  // @ts-expect-error: incorrectly typed upstream\n  let map = result.rawMappings ? result.rawMappings.map(toSegmentTuple) : [];\n  let code = result.code;\n\n  if (minify) {\n    ({ map, code } = await minifyCode(\n      config,\n      projectRoot,\n      file.filename,\n      result.code,\n      file.code,\n      map,\n      reserved\n    ));\n  }\n\n  const output: JsOutput[] = [\n    {\n      data: {\n        code,\n        lineCount: countLines(code),\n        map,\n        functionMap: file.functionMap,\n      },\n      type: file.type,\n    },\n  ];\n\n  return {\n    dependencies,\n    output,\n  };\n}\n\n/** Transforms an asset file. */\nasync function transformAsset(\n  file: AssetFile,\n  context: TransformationContext\n): Promise<TransformResponse> {\n  const { assetRegistryPath, assetPlugins } = context.config;\n\n  // TODO: Add web asset hashing in production.\n  const result = await assetTransformer.transform(\n    getBabelTransformArgs(file, context),\n    assetRegistryPath,\n    assetPlugins\n  );\n\n  const jsFile: JSFile = {\n    ...file,\n    type: 'js/module/asset',\n    ast: result.ast,\n    functionMap: null,\n  };\n\n  return transformJS(jsFile, context);\n}\n\n/**\n * Transforms a JavaScript file with Babel before processing the file with\n * the generic JavaScript transformation.\n */\nasync function transformJSWithBabel(\n  file: JSFile,\n  context: TransformationContext\n): Promise<TransformResponse> {\n  const { babelTransformerPath } = context.config;\n  const transformer: BabelTransformer = require(babelTransformerPath);\n\n  const transformResult = await transformer.transform(\n    // functionMapBabelPlugin populates metadata.metro.functionMap\n    getBabelTransformArgs(file, context, [functionMapBabelPlugin])\n  );\n\n  const jsFile: JSFile = {\n    ...file,\n    ast: transformResult.ast,\n    functionMap:\n      transformResult.metadata?.metro?.functionMap ??\n      // Fallback to deprecated explicitly-generated `functionMap`\n      transformResult.functionMap ??\n      null,\n  };\n\n  return await transformJS(jsFile, context);\n}\n\nasync function transformJSON(\n  file: JSONFile,\n  { options, config, projectRoot }: TransformationContext\n): Promise<TransformResponse> {\n  let code =\n    config.unstable_disableModuleWrapping === true\n      ? JsFileWrapping.jsonToCommonJS(file.code)\n      : JsFileWrapping.wrapJson(file.code, config.globalPrefix);\n  let map: MetroSourceMapSegmentTuple[] = [];\n\n  // TODO: When we can reuse transformJS for JSON, we should not derive `minify` separately.\n  const minify =\n    options.minify &&\n    options.unstable_transformProfile !== 'hermes-canary' &&\n    options.unstable_transformProfile !== 'hermes-stable';\n\n  if (minify) {\n    ({ map, code } = await minifyCode(config, projectRoot, file.filename, code, file.code, map));\n  }\n\n  let jsType: JSFileType;\n\n  if (file.type === 'asset') {\n    jsType = 'js/module/asset';\n  } else if (file.type === 'script') {\n    jsType = 'js/script';\n  } else {\n    jsType = 'js/module';\n  }\n\n  const output: JsOutput[] = [\n    {\n      data: { code, lineCount: countLines(code), map, functionMap: null },\n      type: jsType,\n    },\n  ];\n\n  return {\n    dependencies: [],\n    output,\n  };\n}\n\nfunction getBabelTransformArgs(\n  file: { filename: string; code: string },\n  { options, config, projectRoot }: TransformationContext,\n  plugins: PluginItem[] = []\n): BabelTransformerArgs {\n  const { inlineRequires: _, ...babelTransformerOptions } = options;\n  return {\n    filename: file.filename,\n    options: {\n      ...babelTransformerOptions,\n      enableBabelRCLookup: config.enableBabelRCLookup,\n      enableBabelRuntime: config.enableBabelRuntime,\n      hermesParser: config.hermesParser,\n      projectRoot,\n      publicPath: config.publicPath,\n      globalPrefix: config.globalPrefix,\n      platform: babelTransformerOptions.platform ?? null,\n    },\n    plugins,\n    src: file.code,\n  };\n}\n\nexport async function transform(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const context: TransformationContext = {\n    config,\n    projectRoot,\n    options,\n  };\n  const sourceCode = data.toString('utf8');\n\n  const { unstable_dependencyMapReservedName } = config;\n  if (unstable_dependencyMapReservedName != null) {\n    const position = sourceCode.indexOf(unstable_dependencyMapReservedName);\n    if (position > -1) {\n      throw new SyntaxError(\n        'Source code contains the reserved string `' +\n          unstable_dependencyMapReservedName +\n          '` at character offset ' +\n          position\n      );\n    }\n  }\n\n  if (filename.endsWith('.json')) {\n    const jsonFile: JSONFile = {\n      filename,\n      inputFileSize: data.length,\n      code: sourceCode,\n      type: options.type,\n    };\n\n    return transformJSON(jsonFile, context);\n  }\n\n  if (options.type === 'asset') {\n    const file: AssetFile = {\n      filename,\n      inputFileSize: data.length,\n      code: sourceCode,\n      type: options.type,\n    };\n\n    return transformAsset(file, context);\n  }\n\n  const file: JSFile = {\n    filename,\n    inputFileSize: data.length,\n    code: sourceCode,\n    type: options.type === 'script' ? 'js/script' : 'js/module',\n    functionMap: null,\n  };\n\n  return transformJSWithBabel(file, context);\n}\n\nexport function getCacheKey(config: JsTransformerConfig): string {\n  const { babelTransformerPath, minifierPath, ...remainingConfig } = config;\n\n  const filesKey = getMetroCacheKey([\n    require.resolve(babelTransformerPath),\n    require.resolve(minifierPath),\n    require.resolve('metro-transform-worker/src/utils/getMinifier'),\n    require.resolve('./asset-transformer'),\n    require.resolve('metro/src/ModuleGraph/worker/generateImportNames'),\n    require.resolve('metro/src/ModuleGraph/worker/JsFileWrapping'),\n    ...metroTransformPlugins.getTransformPluginCacheKeyFiles(),\n  ]);\n\n  const babelTransformer = require(babelTransformerPath);\n  return [\n    filesKey,\n    stableHash(remainingConfig).toString('hex'),\n    babelTransformer.getCacheKey ? babelTransformer.getCacheKey() : '',\n  ].join('$');\n}\n"],"mappings":"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"}